import wx
import wx.grid
import pandas as pd
import re
import template_frame

EVEN_ROW_COLOUR = '#CCE6FF'
GRID_LINE_COLOUR = '#ccc'

# Load the CSV file
csv_file = 'Food_Nutrition_Dataset (1).csv'
food_data = pd.read_csv(csv_file)

class DataTable(wx.grid.GridTableBase):
    def __init__(self, data=None):
        wx.grid.GridTableBase.__init__(self)
        self.headerRows = 1
        self.data = data

    def GetNumberRows(self):
        return len(self.data.index)

    def GetNumberCols(self):
        return len(self.data.columns)

    def GetValue(self, row, col):
        return self.data.iloc[row, col]

    def SetValue(self, row, col, value):
        self.data.iloc[row, col] = value

    # For better visualisation
    def GetColLabelValue(self, col):
        return self.data.columns[col]

    def GetAttr(self, row, col, prop):
        attr = wx.grid.GridCellAttr()
        if row % 2 == 1:
            attr.SetBackgroundColour(EVEN_ROW_COLOUR)
        return attr




# Create a subclass of the MainFrame generated by wxFormBuilder
class MyAppFrame(template_frame.MainFrame):
    def __init__(self, parent=None):
        super(MyAppFrame, self).__init__(parent)

        # Bind the event for the "Food Search" button
        self.FoodSearch_button.Bind(wx.EVT_BUTTON, self.on_food_search_click)

    # Event handler for the Food Search button
    def on_food_search_click(self, event):
        dialog = FoodSearchDialog(self)
        dialog.ShowModal()  # Open the dialog when the button is clicked
        dialog.Destroy()


# Create a subclass of FoodSearch_Dialog generated by wxFormBuilder
class FoodSearchDialog(template_frame.FoodSearch_Dialog):
    def __init__(self, parent):
        super(FoodSearchDialog, self).__init__(parent)

        # Bind the Search button event
        self.Search_button.Bind(wx.EVT_BUTTON, self.on_search_click)

    # Event handler for the Search button
    def on_search_click(self, event):
        search_term = self.m_textCtrl1.GetValue().lower()  # Get search term from the text box
        if search_term:
            # Filter food data based on the search term
            filtered_data = food_data[food_data['Food Name'].str.contains(search_term, case=False)]

            # Update the grid with the filtered data
            self.populate_grid(filtered_data)

    # Function to populate the grid with the search results
    def populate_grid(self, data):
        self.m_grid3.ClearGrid()

        # Adjust grid size to match the number of rows and columns in the filtered data
        self.m_grid3.AppendRows(len(data) - self.m_grid3.GetNumberRows())
        for row, row_data in data.iterrows():
            for col, value in enumerate(row_data):
                self.m_grid3.SetCellValue(row, col, str(value))


# Run the application
if __name__ == "__main__":
    app = wx.App(False)
    frame = MyAppFrame(None)
    frame.Show()
    app.MainLoop()